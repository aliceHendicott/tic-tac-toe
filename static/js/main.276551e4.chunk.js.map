{"version":3,"sources":["assets/logo.png","components/GameHeader.js","components/Contents.js","components/Box.js","firebase.js","screens/GameBoard.js","gameLogic/generateToken.js","components/Button.js","screens/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeaderContainer","styled","div","LogoContainer","Logo","img","attrs","src","logo","GameName","KeyText","span","GameAuthor","GameHeader","ContentsContainer","Contents","children","props","Container","Box","className","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","GridContainer","GameInfoContainer","GridBox","Line","line","Circle","circle","EntrySvg","svg","CurrentPlayerDisplay","GameBoard","gameId","window","location","pathname","replace","gamesRef","ref","playerId","search","useState","undefined","data","setData","playerTokens","setPlayerTokens","currentGameState","setCurrentGameState","currentPlayer","setCurrentPlayer","convertPlayerTokenToNumber","token","handleClick","boxIndex","console","log","indexAvailable","updatedGameState","playerNum","nextPlayer","child","update","game_state","current_player","useEffect","once","then","snapshot","val","p1_token","p2_token","map","value","index","id","onClick","x1","x2","y1","y2","cx","cy","r","getSVGToDisplay","generateToken","tokenLength","text","possible","i","charAt","Math","floor","random","length","ButtonContainer","button","Button","createGame","p1","newGame","game_id","set","err","Home","App","basename","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.276551e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5aa0d3a1.png\";","import React from \"react\";\nimport logo from \"../assets/logo.png\";\n\nimport styled from \"styled-components\";\n\nconst HeaderContainer = styled.div`\n  background-color: #393e41;\n  display: flex;\n  justify-content: space-between;\n  padding: 10px;\n`;\n\nconst LogoContainer = styled.div`\n  width: 50px;\n  height: 50px;\n`;\n\nconst Logo = styled.img.attrs({ src: logo })`\n  width: 100%;\n`;\n\nconst GameName = styled.div`\n  line-height: 50px;\n  color: white;\n  font-weight: bold;\n  font-size: 2rem;\n`;\n\nconst KeyText = styled.span`\n  color: #d282a6;\n`;\n\nconst GameAuthor = styled.div`\n  line-height: 50px;\n  color: white;\n  font-style: italic;\n  font-size: 1rem;\n`;\n\nconst GameHeader = () => (\n  <HeaderContainer>\n    <LogoContainer>\n      <Logo />\n    </LogoContainer>\n    <GameName>\n      <KeyText>Tic Tac Toe</KeyText>.\n    </GameName>\n    <GameAuthor>Games by Alice</GameAuthor>\n  </HeaderContainer>\n);\n\nexport default GameHeader;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ContentsContainer = styled.div`\n  max-width: 1120px;\n  margin: 0px auto;\n  padding: 50px 10px;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Contents = ({ children, ...props }) => (\n  <ContentsContainer {...props}>{children}</ContentsContainer>\n);\n\nexport default Contents;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  background-color: white;\n  padding: 50px;\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 0.0625rem 0.5rem 0px;\n  border-radius: 0.1875rem;\n`;\n\nconst Box = ({ className, children }) => (\n  <Container className={className}>{children}</Container>\n);\n\nexport default Box;\n","import firebase from \"firebase/app\";\nimport \"firebase/database\";\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAkeVrF4C9Zr390ZWAwtWxQ5W5-6oUpiXk\",\n  authDomain: \"tic-tac-toe-5b255.firebaseapp.com\",\n  databaseURL: \"https://tic-tac-toe-5b255.firebaseio.com\",\n  projectId: \"tic-tac-toe-5b255\",\n  storageBucket: \"tic-tac-toe-5b255.appspot.com\",\n  messagingSenderId: \"962418034830\",\n  appId: \"1:962418034830:web:07d2f9bc70e0dd27cc21df\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst database = firebase.database();\n\nexport default firebase;\nexport { database };\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Contents from \"../components/Contents\";\nimport Box from \"../components/Box\";\n\nimport { database } from \"../firebase\";\n\nconst GridContainer = styled(Box)`\n  width: 390px;\n  height: 390px;\n  /* position: absolute; */\n`;\n\nconst GameInfoContainer = styled.div`\n  padding: 30px;\n`;\n\nconst GridBox = styled.div`\n  display: inline-block;\n  width: 128px;\n  height: 128px;\n  z-index: 15;\n  border: 1px solid #393e41;\n`;\n\nconst Line = styled.line`\n  stroke: #d282a6;\n  stroke-width: 8px;\n  stroke-linecap: round;\n`;\n\nconst Circle = styled.circle`\n  stroke: #d282a6;\n  stroke-width: 8px;\n  fill: none;\n`;\n\nconst EntrySvg = styled.svg`\n  width: 80px;\n  height: 80px;\n  margin: 25px;\n`;\n\nconst CurrentPlayerDisplay = styled.div`\n  font-size: 3rem;\n  font-weight: 400;\n  margin-bottom: 10px;\n`;\n\nconst GridSvg = styled.svg`\n  position: relative;\n  width: 390px;\n  height: 390px;\n  z-index: 10;\n  margin: 50px;\n`;\n\nconst GridLine = styled.line`\n  stroke: #393e41;\n  stroke-width: 8px;\n  stroke-linecap: round;\n`;\n\nconst getSVGToDisplay = value => {\n  if (value === 1) {\n    return (\n      <EntrySvg>\n        <Line x1=\"4\" x2=\"76\" y1=\"4\" y2=\"76\" />\n        <Line x1=\"76\" x2=\"4\" y1=\"4\" y2=\"76\" />\n      </EntrySvg>\n    );\n  } else if (value === 2) {\n    return (\n      <EntrySvg>\n        <Circle cx=\"40\" cy=\"40\" r=\"36\" />\n      </EntrySvg>\n    );\n  } else return \"\";\n};\n\nconst GridLines = () => (\n  <GridSvg>\n    <GridLine x1=\"126\" x2=\"126\" y1=\"4\" y2=\"386\" />\n    <GridLine x1=\"256\" x2=\"256\" y1=\"4\" y2=\"386\" />\n    <GridLine x1=\"4\" x2=\"386\" y1=\"126\" y2=\"126\" />\n    <GridLine x1=\"4\" x2=\"386\" y1=\"256\" y2=\"256\" />\n  </GridSvg>\n);\n\nconst GameBoard = () => {\n  const gameId = window.location.pathname.replace(/^\\/tic-tac-toe\\//, \"\");\n  const gamesRef = database.ref(\"games\");\n  const playerId = window.location.search.replace(/\\?p=/, \"\");\n\n  const [data, setData] = useState(undefined);\n  const [playerTokens, setPlayerTokens] = useState(undefined);\n  const [currentGameState, setCurrentGameState] = useState(undefined);\n  const [currentPlayer, setCurrentPlayer] = useState(undefined);\n\n  const convertPlayerTokenToNumber = token => {\n    if (playerTokens[0] === token) {\n      return 1;\n    } else {\n      return 2;\n    }\n  };\n\n  const indexAvailable = boxIndex => {\n    return currentGameState[boxIndex] === 0 ? true : false;\n  };\n\n  const handleClick = boxIndex => {\n    console.log(\"clicking\");\n    if (indexAvailable(boxIndex)) {\n      const updatedGameState = [...currentGameState];\n      if (currentPlayer === playerId) {\n        const playerNum = convertPlayerTokenToNumber(currentPlayer);\n        updatedGameState[boxIndex] = playerNum;\n        const nextPlayer = playerNum === 1 ? playerTokens[1] : playerTokens[0];\n        gamesRef.child(gameId).update({\n          game_state: updatedGameState,\n          current_player: nextPlayer\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    gamesRef.once(\"value\").then(snapshot => {\n      setData(snapshot.child(gameId).val());\n    });\n  }, [gameId, gamesRef]);\n\n  useEffect(() => {\n    data && setCurrentGameState(data.game_state);\n    data && setCurrentPlayer(data.current_player);\n    data && setPlayerTokens([data.p1_token, data.p2_token]);\n  }, [data]);\n\n  return (\n    <Contents>\n      <GridContainer>\n        {currentGameState &&\n          currentGameState.map((value, index) => (\n            <GridBox id={\"box-\" + index} onClick={() => handleClick(index)}>\n              {getSVGToDisplay(value)}\n            </GridBox>\n          ))}\n      </GridContainer>\n      <GameInfoContainer>\n        {currentPlayer !== undefined && (\n          <CurrentPlayerDisplay>\n            Current Player: {convertPlayerTokenToNumber(currentPlayer)}\n          </CurrentPlayerDisplay>\n        )}\n        {playerTokens !== undefined && (\n          <CurrentPlayerDisplay>\n            You are player {convertPlayerTokenToNumber(playerId)}\n          </CurrentPlayerDisplay>\n        )}\n        {playerTokens !== undefined && (\n          <CurrentPlayerDisplay>\n            Player 2 token is {playerTokens[1]}\n          </CurrentPlayerDisplay>\n        )}\n      </GameInfoContainer>\n    </Contents>\n  );\n};\n\nexport default GameBoard;\n","const generateToken = tokenLength => {\n  let text = \"\";\n  const possible =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  for (let i = 0; i < tokenLength; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n};\n\nexport default generateToken;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ButtonContainer = styled.button`\n  padding: 15px 25px;\n  background-color: rgb(141, 43, 88);\n  color: white;\n  text-decoration: none;\n  border-radius: 0.1875rem;\n`;\n\nconst Button = ({ children, ...props }) => (\n  <ButtonContainer {...props}>{children}</ButtonContainer>\n);\n\nexport default Button;\n","import React from \"react\";\nimport generateToken from \"../gameLogic/generateToken\";\n\nimport Button from \"../components/Button\";\nimport Contents from \"../components/Contents\";\n\nimport { database } from \"../firebase\";\n\nconst createGame = () => {\n  const p1 = generateToken(4);\n\n  const newGame = {\n    p1_token: p1,\n    p2_token: generateToken(4),\n    current_player: p1,\n    game_state: [0, 0, 0, 0, 0, 0, 0, 0, 0]\n  };\n\n  const game_id = generateToken(6);\n\n  const game = database.ref(\"games/\" + game_id);\n\n  game.set(newGame).then(\n    () => {\n      window.location = `/tic-tac-toe/${game_id}?p=${newGame.p1_token}`;\n    },\n    err => {\n      throw err;\n    }\n  );\n};\n\nconst Home = () => (\n  <Contents>\n    <Button onClick={createGame}>Start a new game (2)</Button>\n  </Contents>\n);\n\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\nimport GameHeader from \"./components/GameHeader\";\n\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport GameBoard from \"./screens/GameBoard\";\nimport Home from \"./screens/Home\";\n\nfunction App() {\n  return (\n    <>\n      <GameHeader />\n      <BrowserRouter basename=\"/tic-tac-toe/\">\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/:token\" component={GameBoard} />\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}